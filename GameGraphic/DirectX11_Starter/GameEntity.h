#pragma once
#include<DirectXMath.h>
#include"Mesh.h"
#include"SimpleShader.h"
#include"Material.h"

//for the DX Math library
using namespace DirectX;

class GameEntity
{
public:
	//default constructor and destructor
	GameEntity();
	~GameEntity();

	//constructor accept mesh pointer
	GameEntity(Mesh* pMesh, Material* pMaterial);
	
	//setting transformations
	void setPositionX(float x);
	void setPositionY(float y);
	void setPositionZ(float z);

	void setRotationX(float x);
	void setRotationY(float y);
	void setRotationZ(float z);

	void setScaleX(float x);
	void setScaleY(float y);
	void setScaleZ(float z);

	//setting pointers
	void setMesh(Mesh* pMesh);
	void setMaterial(Material* pMaterial);
#if 0
	void setVertexShader(SimpleVertexShader* pVS);
	void setPixelShader(SimplePixelShader* pPS);
#endif
	//Draw Entity
	void DrawEntity(XMFLOAT4X4 viewMatrix, XMFLOAT4X4 projectionMatrix);

private:
	//Mesh pointer
	Mesh* pEntityMesh;

	//Material pointer
	Material* pEntityMaterial;

	//Transformations
	XMFLOAT3 Position;
	XMFLOAT3 Rotation;
	XMFLOAT3 Scale;

	//worldMatrix generated by 3 vectors above
	XMFLOAT4X4 worldMatrix;
#if 0	
	//Shader pointer
	SimpleVertexShader* vertexShader;
	SimplePixelShader* pixelShader;
#endif
};

